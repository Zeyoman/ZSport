security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username # oui je sais que il faut changer mais j'ai envie de garder username Baptiste <3
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator

            form_login:
                login_path: app_login      # La route de ta page de login
                check_path: app_login

            custom_authenticators:
                - App\Security\LoginFormAuthenticator

            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true
            
            entry_point: App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_USER: []
        ROLE_BANNED: ~
        ROLE_ADMIN: [ROLE_USER]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Laissez l’accueil accessible aux anonymes
        - { path: '^/login', roles: PUBLIC_ACCESS }
        - { path: '^/reset-password', roles: PUBLIC_ACCESS }
        - { path: '^/reset-password/check-email', roles: PUBLIC_ACCESS }
        - { path: '^/$', roles: PUBLIC_ACCESS } # La homepage est publique
        - { path: '^/admin', roles: ROLE_ADMIN } # Protège les routes admin
        - { path: '^/', roles: ROLE_USER } # Les autres pages nécessitent d'être connecté

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
